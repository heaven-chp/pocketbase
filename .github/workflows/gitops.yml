name: gitops

on:
  push:
    branches: [ "**" ]
    tags: [ '**' ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_TAG_FOR_BRANCH: ${{ github.ref_name }}
  IMAGE_TAG_FOR_TAG: ${{ github.ref_name }}


jobs:
  code:
    strategy:
      matrix:
        runners: [ 'ubuntu-24.04' ]
        go: [ '1.24.2' ]
    runs-on: ${{ matrix.runners }}
    name: ${{ matrix.runners }}, golang:${{ matrix.go }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
          cache-dependency-path: |
            go.sum
      - name: Build
        run: go build -o main main.go

      - name: Test
        run: go clean -testcache && go test -coverprofile=coverage.out -cover ./...

      - name: Coverage
        run: go tool cover -html=./coverage.out -o ./coverage.html

  image:
    needs: code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.ACTIONS_TOKEN }}
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.IMAGE_TAG_FOR_BRANCH }},enable=${{ github.ref_type == 'branch' }}
            type=raw,value=${{ env.IMAGE_TAG_FOR_TAG }},enable=${{ github.ref_type == 'tag' }}
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          provenance: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
